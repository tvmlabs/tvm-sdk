// Copyright (C) 2019-2021 TON Labs. All Rights Reserved.
//
// Licensed under the SOFTWARE EVALUATION License (the "License"); you may not
// use this file except in compliance with the License.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific TON DEV software governing permissions and
// limitations under the License.
use chrono::Utc;
use tvm_abi::TokenValue;
use tvm_abi::contract::ABI_VERSION_2_4;
use tvm_types::SliceData;

use crate::executor::engine::Engine;
use crate::executor::token::execute_run_wasm_concat_multiarg;
use crate::stack::Stack;
use crate::stack::StackItem;
use crate::stack::savelist::SaveList;
use crate::utils::pack_data_to_cell;
use crate::utils::unpack_data_from_cell;

static DEFAULT_CAPABILITIES: u64 = 0x572e;

fn read_boc(filename: &str) -> Vec<u8> {
    let mut bytes = Vec::new();
    let mut file = std::fs::File::open(filename).unwrap();
    std::io::Read::read_to_end(&mut file, &mut bytes).unwrap();
    bytes
}

fn load_boc(filename: &str) -> tvm_types::Cell {
    let bytes = read_boc(filename);
    tvm_types::read_single_root_boc(bytes).unwrap()
}

fn append_uint32(b: &mut Vec<u8>, v: u32) {
    b.push((v >> 24) as u8);
    b.push((v >> 16) as u8);
    b.push((v >> 8) as u8);
    b.push(v as u8);
}


#[test]
fn test_tls_wasm_from_hash_for_google() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = //"f45dae3df26f2a45f006bd7e7d32f426e240dfd1391669953688cb40886aff11"; 
    //"25dc3d80d7e4d8f27dfadc9c2faf9cf2d8dea0a9e08a692da2db7e34d74d66e1";
    "f6b0cc30d023d266819b16dafa5a6a6ad25b97246bbbca80abac2df974939b87";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decode("020d308202093082018ea003020102020d0203e5c068ef631a9c72905052300a06082a8648ce3d0403033047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f74205234301e170d3136303632323030303030305a170d3336303632323030303030305a3047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f742052343076301006072a8648ce3d020106052b8104002203620004f37473a7688b60ae43b835c581307b4b499dfbc161cee6de46bd6bd5611835ae40dd73f78991305aeb3cee857ca240763ba9c6b847d82ae792916a73e9b172399f299fa298d35f5e5886650fa1846506d1dc8bc9c773c88c6a2fe5c4abd11d8aa3423040300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e04160414804cd6eb74ff4936a3d5d8fcb53ec56af0941d8c300a06082a8648ce3d0403030369003066023100e840ff83de03f49fae1d7aa72eb9af4ff6831d0e2d85011dd1d96aec0fc2afc75e565e5cd51c5822280bf730b62fb17c023100f0613ca7f4a082e321d5841d73869c2dafca349bf19fb92336e2bc60039d80b39a56c8e1e2bb1479cacd21d494b54943").unwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("927b8fb67bbad77445e5fea4c71aa9846d7ddd01").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let current_timestamp = Utc::now().timestamp() as u32;
    let mut timestamp: Vec<u8> = Vec::new();
    append_uint32(&mut timestamp, current_timestamp);

    //let timestamp: Vec<u8> = vec![0, 0, 3, 232];
    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let start = std::time::Instant::now();
    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    let t = start.elapsed().as_micros();
    println!("Wasm Return Status: {:?}", status);
    println!("Time: {:?}", t);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    // assert_eq!("0100000000689fabf7ab8e1f759972f2594613044e4a197c71d4f3f541d7e2afaba98838c6d2e031e330e2fb0805dd8ea233cc05ae3d1d52ea11d0db3ae013e30b1f71808448606f90fb06a56215f57ad962829f36187e345c60153a92f9169f9de61ee7feb5dc6eaadd908e93790c729ab17a3ee9276f51cb0081e5a7d03dd76717ca596bdfc183fe5309d70b1b9cbce2757448b8577d9d1a00c30f56de34e5524255c8a51b0bcfa5d7661dfab69b7ed0e200629687635e769f43a8b2b0251d23da93753dde5b8873898500c85ea72ad05c9b3c1d014106ff21b12495051c87ed593fdc963578a73023b3390e88c39a3941ae443be09fff2a4d1a36c64c2e439ca82bb1dea584f325", hex::encode(ress.clone()));

    println!("ress: {:?}", hex::encode(ress));
}

#[test]
fn test_tls_wasm_from_hash_for_kakao() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = 
    "f6b0cc30d023d266819b16dafa5a6a6ad25b97246bbbca80abac2df974939b87";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decode("03923082038e30820276a0030201020210033af1e6a711a9a0bb2864b11d09fae5300d06092a864886f70d01010b05003061310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d3120301e06035504031317446967694365727420476c6f62616c20526f6f74204732301e170d3133303830313132303030305a170d3338303131353132303030305a3061310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d3120301e06035504031317446967694365727420476c6f62616c20526f6f7420473230820122300d06092a864886f70d01010105000382010f003082010a0282010100bb37cd34dc7b6bc9b26890ad4a75ff46ba210a088df51954c9fb88dbf3aef23a89913c7ae6ab061a6bcfac2de85e092444ba629a7ed6a3a87ee054752005ac50b79c631a6c30dcda1f19b1d71edefdd7e0cb948337aeec1f434edd7b2cd2bd2ea52fe4a9b8ad3ad499a4b625e99b6b00609260ff4f214918f76790ab61069c8ff2bae9b4e992326bb5f357e85d1bcd8c1dab95049549f3352d96e3496ddd77e3fb494bb4ac5507a98f95b3b423bb4c6d45f0f6a9b29530b4fd4c558c274a57147c829dcd7392d3164a060c8c50d18f1e09be17a1e621cafd83e510bc83a50ac46728f67314143d4676c387148921344daf0f450ca649a1babb9cc5b1338329850203010001a3423040300f0603551d130101ff040530030101ff300e0603551d0f0101ff040403020186301d0603551d0e041604144e2254201895e6e36ee60ffafab912ed06178f39300d06092a864886f70d01010b05000382010100606728946f0e4863eb31ddea6718d5897d3cc58b4a7fe9bedb2b17dfb05f73772a3213398167428423f2456735ec88bff88fb0610c34a4ae204c84c6dbf835e176d9dfa642bbc74408867f3674245ada6c0d145935bdf249ddb61fc9b30d472a3d992fbb5cbbb5d420e1995f534615db689bf0f330d53e31e28d849ee38adada963e3513a55ff0f970507047411157194ec08fae06c49513172f1b259f75f2b18e99a16f13b14171fe882ac84f102055d7f31445e5e044f4ea879532930efe5346fa2c9dff8b22b94bd90945a4dea4b89a58dd1b7d529f8e59438881a49e26d56faddd0dc6377ded03921be5775f76ee3c8dc45d565ba2d9666eb33537e532b6").unwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("0f3f96980381e451efad0d2ddd30e3d3").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

   // let timestamp: Vec<u8> = vec![0, 0, 3, 232];
    let current_timestamp = Utc::now().timestamp() as u32;
    let mut timestamp: Vec<u8> = Vec::new();
    append_uint32(&mut timestamp, current_timestamp);
    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    println!("Wasm Return Status: {:?}", status);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    assert_eq!(
        "010000000068d1cffbabccd9d1bfcc35a2dde8dcbcc1de1c8c5a268a52df14865c9a1352735b6dc7fa10749259b790831c1f165b03c60540d4c98f0099f8254bd635a80d3f7f1c6cf9951676de398d26d4c6084a358804c12bad7cce6c44e877b2b9b94e22d6e187cebcacad196d6bf5340474b7bdf28ae4f3eacd4583f26d123748aa2aa5c8b59b540e72f520e3111846f6d921692edb80cd3127a17b2b4a533e8d8b890a3959337c6375d6b523d48ae5451f8b340f55f596267a8cb0cb7934ebaac3e536991e8af96cce60233b7507816652e1484e95ca190652e479ff0a4f0181cf242d618053c4f398eccb7913a8b2a284d1e649e0448b3089936f65d2119b8dd701722f456d27",
        hex::encode(ress.clone())
    );

    println!("ress: {:?}", hex::encode(ress));
}

#[test]
fn test_tls_wasm_from_hash_for_facebook() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = "25dc3d80d7e4d8f27dfadc9c2faf9cf2d8dea0a9e08a692da2db7e34d74d66e1";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decode("03c9308203c5308202ada003020102021002ac5c266a0b409b8f0b79f2ae462577300d06092a864886f70d0101050500306c310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d312b30290603550403132244696769436572742048696768204173737572616e636520455620526f6f74204341301e170d3036313131303030303030305a170d3331313131303030303030305a306c310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d312b30290603550403132244696769436572742048696768204173737572616e636520455620526f6f7420434130820122300d06092a864886f70d01010105000382010f003082010a0282010100c6cce573e6fbd4bbe52d2d32a6dfe5813fc9cd2549b6712ac3d5943467a20a1cb05f69a640b1c4b7b28fd098a4a941593ad3dc94d63cdb7438a44acc4d2582f74aa5531238eef3496d71917e63b6aba65fc3a484f84f6251bef8c5ecdb3892e306e508910cc4284155fbcb5a89157e71e835bf4d72093dbe3a38505b77311b8db3c724459aa7ac6d00145a04b7ba13eb510a984141224e656187814150a6795c89de194a57d52ee65d1c532c7e98cd1a0616a46873d03404135ca171d35a7c55db5e64e13787305604e511b4298012f1793988a202117c2766b788b778f2ca0aa838ab0a64c2bf665d9584c1a1251e875d1a500b2012cc41bb6e0b5138b84bcb0203010001a3633061300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e04160414b13ec36903f8bf4701d498261a0802ef63642bc3301f0603551d23041830168014b13ec36903f8bf4701d498261a0802ef63642bc3300d06092a864886f70d010105050003820101001c1a0697dcd79c9f3c886606085721db2147f82a67aabf183276401057c18af37ad911658e35fa9efc45b59ed94c314bb891e8432c8eb378cedbe3537971d6e5219401da55879a2464f68a66ccde9c37cda834b1699b23c89e78222b7043e35547316119ef58c5852f4e30f6a0311623c8e7e2651633cbbf1a1ba03df8ca5e8b318b6008892d0c065c52b7c4f90a98d1155f9f12be7c366338bd44a47fe4262b0ac497690de98ce2c01057b8c876129155f24869d8bc2a025b0f44d42031dbf4ba70265d90609ebc4b17092fb4cb1e4368c90727c1d25cf7ea21b968129c3c9cbf9efc805c9b63cdec47aa252767a037f300827d54d7a9f8e92e13a377e81f4a").unwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("14996af12848fc796cb61a6ab287e4b01dbd78a82f").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let timestamp: Vec<u8> = vec![0, 0, 3, 232];
    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    println!("Wasm Return Status: {:?}", status);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    assert_eq!(
        "0100000000689fb76aa8cdd763e2175db4b267e9c6e14a506f7169475fc0af54decde9fb04316826f0e56cc54d19c80a8a1fe24c404420d09ec9288ca46fbfcd9e80dd19f6accdc0b4519b775019e139ba001b1e62cad6ad021605892c49b1e778fca40497621a001de52b8fa1ad5ae4834191da3ef2345bce28fb49d3a3ea4a6ccedbd314facaed71558bf47bd4ea8c792944c3c5daa0add41784423aa660f3acd8a1d4ec0e6535a2714f762f6e0be41c6ef36079f1e307a309adf04ffb761aa8bbc66f5bcacc74c84655f3f3bed93206b70c30bf93069195f1c9d51b2e59f6d226ab9a92f473578221456143e0c45065f50d930a1807ca24702e4b045589c8353f80383f608288c3",
        hex::encode(ress.clone())
    );

    println!("ress: {:?}", hex::encode(ress));
}
