// Copyright (C) 2019-2021 TON Labs. All Rights Reserved.
//
// Licensed under the SOFTWARE EVALUATION License (the "License"); you may not
// use this file except in compliance with the License.
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific TON DEV software governing permissions and
// limitations under the License.
use chrono::Utc;
use tvm_abi::TokenValue;
use tvm_abi::contract::ABI_VERSION_2_4;
use tvm_types::SliceData;

use crate::executor::engine::Engine;
use crate::executor::token::execute_run_wasm_concat_multiarg;
use crate::stack::Stack;
use crate::stack::StackItem;
use crate::stack::savelist::SaveList;
use crate::utils::pack_data_to_cell;
use crate::utils::unpack_data_from_cell;

static DEFAULT_CAPABILITIES: u64 = 0x572e;

fn read_boc(filename: &str) -> Vec<u8> {
    let mut bytes = Vec::new();
    let mut file = std::fs::File::open(filename).unwrap();
    std::io::Read::read_to_end(&mut file, &mut bytes).unwrap();
    bytes
}

fn load_boc(filename: &str) -> tvm_types::Cell {
    let bytes = read_boc(filename);
    tvm_types::read_single_root_boc(bytes).unwrap()
}

fn append_uint32(b: &mut Vec<u8>, v: u32) {
    b.push((v >> 24) as u8);
    b.push((v >> 16) as u8);
    b.push((v >> 8) as u8);
    b.push(v as u8);
}

#[test]
fn test_tls_wasm_from_hash_for_google() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = //"f45dae3df26f2a45f006bd7e7d32f426e240dfd1391669953688cb40886aff11"; 
    //"25dc3d80d7e4d8f27dfadc9c2faf9cf2d8dea0a9e08a692da2db7e34d74d66e1";
    //"f6b0cc30d023d266819b16dafa5a6a6ad25b97246bbbca80abac2df974939b87";
    "d4a067079c3ff4e0b0b6f579ef2d1b9a1d8fc21a0076162503ff46a6e8fca2e5";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decode("020d308202093082018ea003020102020d0203e5c068ef631a9c72905052300a06082a8648ce3d0403033047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f74205234301e170d3136303632323030303030305a170d3336303632323030303030305a3047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f742052343076301006072a8648ce3d020106052b8104002203620004f37473a7688b60ae43b835c581307b4b499dfbc161cee6de46bd6bd5611835ae40dd73f78991305aeb3cee857ca240763ba9c6b847d82ae792916a73e9b172399f299fa298d35f5e5886650fa1846506d1dc8bc9c773c88c6a2fe5c4abd11d8aa3423040300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e04160414804cd6eb74ff4936a3d5d8fcb53ec56af0941d8c300a06082a8648ce3d0403030369003066023100e840ff83de03f49fae1d7aa72eb9af4ff6831d0e2d85011dd1d96aec0fc2afc75e565e5cd51c5822280bf730b62fb17c023100f0613ca7f4a082e321d5841d73869c2dafca349bf19fb92336e2bc60039d80b39a56c8e1e2bb1479cacd21d494b54943").unwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("14927b8fb67bbad77445e5fea4c71aa9846d7ddd01").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let current_timestamp = Utc::now().timestamp() as u32;
    let mut timestamp: Vec<u8> = Vec::new();
    append_uint32(&mut timestamp, current_timestamp);

    // let timestamp: Vec<u8> = vec![0, 0, 3, 232];
    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let start = std::time::Instant::now();
    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    let t = start.elapsed().as_micros();
    println!("Wasm Return Status: {:?}", status);
    println!("Time: {:?}", t);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    assert_eq!("010000000068d1dd34959c3cb911566de12044befd39445660adad6fe7d9d2ab142ff079db21306667b11f1c10b45c7972d2dbb2d6f2de8394baa546f5ebda274c8b6cac3b6d9c5875d9f918265db25d1bde74fb9af72f08ea5313d16a94c843e33ec48bad0bba82f67bb02d7ac1e2b58bc0545b8f2b2777f7ba4b33f726a56865e48ff4980957a9515126b7f113241c9d13b78134b428e451252e3ac15776a93ae19339e6329b821032dee28e913c5cba7542ca3c196aa1490baa65fce33719a26e720294a5c0d11499e265ff70db69dce3364178342e65718ad47165756cc7ee4735df823730fdb78d5dc45d98be1015d8a4eebc05b6318779a56429ccd1f3bc024ee4746158e6b5", hex::encode(ress.clone()));

    println!("ress: {:?}", hex::encode(ress));
}

#[test]
fn test_tls_wasm_from_hash_for_kakao() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = "d4a067079c3ff4e0b0b6f579ef2d1b9a1d8fc21a0076162503ff46a6e8fca2e5";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decode("03923082038e30820276a0030201020210033af1e6a711a9a0bb2864b11d09fae5300d06092a864886f70d01010b05003061310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d3120301e06035504031317446967694365727420476c6f62616c20526f6f74204732301e170d3133303830313132303030305a170d3338303131353132303030305a3061310b300906035504061302555331153013060355040a130c446967694365727420496e6331193017060355040b13107777772e64696769636572742e636f6d3120301e06035504031317446967694365727420476c6f62616c20526f6f7420473230820122300d06092a864886f70d01010105000382010f003082010a0282010100bb37cd34dc7b6bc9b26890ad4a75ff46ba210a088df51954c9fb88dbf3aef23a89913c7ae6ab061a6bcfac2de85e092444ba629a7ed6a3a87ee054752005ac50b79c631a6c30dcda1f19b1d71edefdd7e0cb948337aeec1f434edd7b2cd2bd2ea52fe4a9b8ad3ad499a4b625e99b6b00609260ff4f214918f76790ab61069c8ff2bae9b4e992326bb5f357e85d1bcd8c1dab95049549f3352d96e3496ddd77e3fb494bb4ac5507a98f95b3b423bb4c6d45f0f6a9b29530b4fd4c558c274a57147c829dcd7392d3164a060c8c50d18f1e09be17a1e621cafd83e510bc83a50ac46728f67314143d4676c387148921344daf0f450ca649a1babb9cc5b1338329850203010001a3423040300f0603551d130101ff040530030101ff300e0603551d0f0101ff040403020186301d0603551d0e041604144e2254201895e6e36ee60ffafab912ed06178f39300d06092a864886f70d01010b05000382010100606728946f0e4863eb31ddea6718d5897d3cc58b4a7fe9bedb2b17dfb05f73772a3213398167428423f2456735ec88bff88fb0610c34a4ae204c84c6dbf835e176d9dfa642bbc74408867f3674245ada6c0d145935bdf249ddb61fc9b30d472a3d992fbb5cbbb5d420e1995f534615db689bf0f330d53e31e28d849ee38adada963e3513a55ff0f970507047411157194ec08fae06c49513172f1b259f75f2b18e99a16f13b14171fe882ac84f102055d7f31445e5e044f4ea879532930efe5346fa2c9dff8b22b94bd90945a4dea4b89a58dd1b7d529f8e59438881a49e26d56faddd0dc6377ded03921be5775f76ee3c8dc45d565ba2d9666eb33537e532b6").unwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("0f3f96980381e451efad0d2ddd30e3d3").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // let timestamp: Vec<u8> = vec![0, 0, 3, 232];
    let current_timestamp = Utc::now().timestamp() as u32;
    let mut timestamp: Vec<u8> = Vec::new();
    append_uint32(&mut timestamp, current_timestamp);
    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    println!("Wasm Return Status: {:?}", status);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    assert_eq!(
        "010000000068d1d3e9abccd9d1bfcc35a2dde8dcbcc1de1c8c5a268a52df14865c9a1352735b6dc7fa10749259b790831c1f165b03c60540d4c98f0099f8254bd635a80d3f7f1c6cf9951676de398d26d4c6084a358804c12bad7cce6c44e877b2b9b94e22d6e187cebcacad196d6bf5340474b7bdf28ae4f3eacd4583f26d123748aa2aa5c8b59b540e72f520e3111846f6d921692edb80cd3127a17b2b4a533e8d8b890a3959337c6375d6b523d48ae5451f8b340f55f596267a8cb0cb7934ebaac3e536991e8af96cce60233b7507816652e1484e95ca190652e479ff0a4f0181cf242d618053c4f398eccb7913a8b2a284d1e649e0448b3089936f65d2119b8dd701722f456d27",
        hex::encode(ress.clone())
    );

    println!("ress: {:?}", hex::encode(ress));
}

#[test]
fn test_tls_wasm_from_hash_for_facebook() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = "d4a067079c3ff4e0b0b6f579ef2d1b9a1d8fc21a0076162503ff46a6e8fca2e5";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decodeunwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("14996af12848fc796cb61a6ab287e4b01dbd78a82f").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let current_timestamp = Utc::now().timestamp() as u32;
    let mut timestamp: Vec<u8> = Vec::new();
    append_uint32(&mut timestamp, current_timestamp);

    // let timestamp: Vec<u8> = vec![0, 0, 3, 232];
    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    println!("Wasm Return Status: {:?}", status);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    assert_eq!(
        "010000000068d1e8a6a8cdd763e2175db4b267e9c6e14a506f7169475fc0af54decde9fb04316826f0e56cc54d19c80a8a1fe24c404420d09ec9288ca46fbfcd9e80dd19f6accdc0b4519b775019e139ba001b1e62cad6ad021605892c49b1e778fca40497621a001de52b8fa1ad5ae4834191da3ef2345bce28fb49d3a3ea4a6ccedbd314facaed71558bf47bd4ea8c792944c3c5daa0add41784423aa660f3acd8a1d4ec0e6535a2714f762f6e0be41c6ef36079f1e307a309adf04ffb761aa8bbc66f5bcacc74c84655f3f3bed93206b70c30bf93069195f1c9d51b2e59f6d226ab9a92f473578221456143e0c45065f50d930a1807ca24702e4b045589c8353f80383f608288c3",
        hex::encode(ress.clone())
    );

    println!("ress: {:?}", hex::encode(ress));
}

#[test]
fn test_tls_wasm_from_hash_for_google_for_not_existing_kid() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = "d4a067079c3ff4e0b0b6f579ef2d1b9a1d8fc21a0076162503ff46a6e8fca2e5";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decode("020d308202093082018ea003020102020d0203e5c068ef631a9c72905052300a06082a8648ce3d0403033047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f74205234301e170d3136303632323030303030305a170d3336303632323030303030305a3047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f742052343076301006072a8648ce3d020106052b8104002203620004f37473a7688b60ae43b835c581307b4b499dfbc161cee6de46bd6bd5611835ae40dd73f78991305aeb3cee857ca240763ba9c6b847d82ae792916a73e9b172399f299fa298d35f5e5886650fa1846506d1dc8bc9c773c88c6a2fe5c4abd11d8aa3423040300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e04160414804cd6eb74ff4936a3d5d8fcb53ec56af0941d8c300a06082a8648ce3d0403030369003066023100e840ff83de03f49fae1d7aa72eb9af4ff6831d0e2d85011dd1d96aec0fc2afc75e565e5cd51c5822280bf730b62fb17c023100f0613ca7f4a082e321d5841d73869c2dafca349bf19fb92336e2bc60039d80b39a56c8e1e2bb1479cacd21d494b54943").unwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("14827b8fb67bbad77445e5fea4c71aa9846d7ddd01").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let current_timestamp = Utc::now().timestamp() as u32;
    let mut timestamp: Vec<u8> = Vec::new();
    append_uint32(&mut timestamp, current_timestamp);

    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let start = std::time::Instant::now();
    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    let t = start.elapsed().as_micros();
    println!("Wasm Return Status: {:?}", status);
    println!("Time: {:?}", t);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    assert_eq!("00032b", hex::encode(ress.clone()));

    println!("ress: {:?}", hex::encode(ress));
}

#[test]
fn test_tls_wasm_from_hash_for_google_for_not_invalid_root_cert() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = "d4a067079c3ff4e0b0b6f579ef2d1b9a1d8fc21a0076162503ff46a6e8fca2e5";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decode("055b308205573082033fa003020102020d0203e5936f31b01349886ba217300d06092a864886f70d01010c05003047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f74205231301e170d3136303632323030303030305a170d3336303632323030303030305a3047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f7420523130820222300d06092a864886f70d01010105000382020f003082020a0282020100b611028b1ee3a1779b3bdcbf943eb795a7403ca1fd82f97d32068271f6f68c7ffbe8dbbc6a2e9797a38c4bf92bf6b1f9ce841db1f9c597deefb9f2a3e9bc12895ea7aa52abf82327cba4b19c63dbd7997ef00a5eeb68a6f4c65a470d4d1033e34eb113a3c8186c4becfc0990df9d6429252307a1b4d23d2e60e0cfd20987bbcd48f04dc2c27a888abbbacf5919d6af8fb007b09e31f182c1c0df2ea66d6c190eb5d87e261a45033db079a49428ad0f7f26e5a808fe96e83c689453ee833a882b159609b2e07a8c2e75d69ceba756648f964f68ae3d97c2848fc0bc40c00b5cbdf687b3356cac18507f84e04ccd92d320e933bc5299af32b529b3252ab448f972e1ca64f7e682108de89dc28a88fa38668afc63f901f978fd7b5c77fa7687faecdfb10e799557b4bd26efd601d1eb160abb8e0bb5c5c58a55abd3acea914b29cc19a432254e2af16544d002ceaace49b4ea9f7c83b0407be743aba76ca38f7d8981fa4ca5ffd58ec3ce4be0b5d8b38e45cf76c0ed402bfd530fb0a7d53b0db18aa203de31adcc77ea6f7b3ed6df912212e6befad832fc1063145172de5dd61693bd296833ef3a66ec078a26df13d757657827de5e491400a2007f9aa821b6a9b195b0a5b90d1611dac76c483c40e07e0d5acd563cd19705b9cb4bed394b9cc43fd255136e24b0d671faf4c1bacced1bf5fe8141d800983d3ac8ae7a98371805950203010001a3423040300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e04160414e4af2b26711a2b4827852f52662ceff08913713e300d06092a864886f70d01010c050003820201009faa4226db0b9bbeff1e96922e3ea2654a6a98ba22cb7dc13ad8820a06c6f6a5dec04e876679a1f9a6589caaf9b5e660e7e0e8b11e4241330b373dce897015cab524a8cf6bb5d2402198cf2234cf3bc52284e0c50e8a7c5d88e43524ce9b3e1a541e6edbb287a7fcf3fa815514620a59a92205313e82d6eedb5734bc3395d3171be827a28b7b4e261a7a5a64b6d1ac37f1fda0f338ec72f011759dcb34528de6766b17c6df86ab278e492b7566811021a6ea3ef4ae25ff7c15dece8c253fca62700af72f096607c83f1cfcf0db4530df6288c1b50f9dc39f4ade595947c5872236e682a7ed0ab9e207a08d7b7a4a3c71d2e203a11f3207dd1be442ce0c00456180b50b20592978bdf955cb63c53c4cf4b6ffdb6a5f316b999e2cc16b50a4d7e61814bd853f67ab469fa0ff42a73a7f5ccb5db0701d2b34f5d476090ceb784c5905f33342c36115101b774dce228cd485f2457db753eaef405a940a5c205f4e405d622276dfffce61bd8c2378d23702e08eded1113789f6bfed490762ae92ec401aaf1409d9d04eb2a2f7beeeeed8ffdc1a2ddeb83671e2fc79b79425d148735ba135e7b3996775c1193a2b474ed3428efd31c81666dad20c3cdbb38ec9a10d800f7b167714bfffdb0994b293bc205815e9db7143f3de10c300dca82a95b6c2d63f906b76db6cfe8cbcf270350cdc991935dcd7c84663d53671ae57fbb7826ddc").unwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("14927b8fb67bbad77445e5fea4c71aa9846d7ddd01").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let current_timestamp = Utc::now().timestamp() as u32;
    let mut timestamp: Vec<u8> = Vec::new();
    append_uint32(&mut timestamp, current_timestamp);

    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let start = std::time::Instant::now();
    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    let t = start.elapsed().as_micros();
    println!("Wasm Return Status: {:?}", status);
    println!("Time: {:?}", t);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    assert_eq!("000327", hex::encode(ress.clone()));

    println!("ress: {:?}", hex::encode(ress));
}

#[test]
fn test_tls_wasm_from_hash_for_google_too_short_tls_data() {
    let elector_code = load_boc("benches/elector-code.boc");
    let elector_data = load_boc("benches/elector-data.boc");
    let config_data = load_boc("benches/config-data.boc");

    let mut ctrls = SaveList::default();
    ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
    let params = vec![
        StackItem::int(0x76ef1ea),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(1633458077),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::int(0),
        StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
        StackItem::slice(
            SliceData::from_string(
                "9fe0000000000000000000000000000000000000000000000000000000000000001_",
            )
            .unwrap(),
        ),
        StackItem::cell(config_data.reference(0).unwrap()),
        StackItem::None,
        StackItem::int(0),
    ];
    ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();

    let stack = Stack::new();

    let mut engine = Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
        SliceData::load_cell_ref(&elector_code).unwrap(),
        Some(ctrls.clone()),
        Some(stack.clone()),
        None,
        vec![],
    );
    engine.wasm_engine_init_cached().unwrap();

    let hash_str = //"f45dae3df26f2a45f006bd7e7d32f426e240dfd1391669953688cb40886aff11"; 
    //"25dc3d80d7e4d8f27dfadc9c2faf9cf2d8dea0a9e08a692da2db7e34d74d66e1";
    "d4a067079c3ff4e0b0b6f579ef2d1b9a1d8fc21a0076162503ff46a6e8fca2e5";
    let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
    let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
    let hash: Vec<u8> = (0..hash_str.len())
        .step_by(2)
        .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
        .collect::<Vec<u8>>();
    let cell =
        TokenValue::write_bytes(hash.as_slice(), &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let tls_data: Vec<u8> = hex::decode("8fa2d869").unwrap();

    let cell = TokenValue::write_bytes(&tls_data, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let cert: Vec<u8> = hex::decode("020d308202093082018ea003020102020d0203e5c068ef631a9c72905052300a06082a8648ce3d0403033047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f74205234301e170d3136303632323030303030305a170d3336303632323030303030305a3047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f742052343076301006072a8648ce3d020106052b8104002203620004f37473a7688b60ae43b835c581307b4b499dfbc161cee6de46bd6bd5611835ae40dd73f78991305aeb3cee857ca240763ba9c6b847d82ae792916a73e9b172399f299fa298d35f5e5886650fa1846506d1dc8bc9c773c88c6a2fe5c4abd11d8aa3423040300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e04160414804cd6eb74ff4936a3d5d8fcb53ec56af0941d8c300a06082a8648ce3d0403030369003066023100e840ff83de03f49fae1d7aa72eb9af4ff6831d0e2d85011dd1d96aec0fc2afc75e565e5cd51c5822280bf730b62fb17c023100f0613ca7f4a082e321d5841d73869c2dafca349bf19fb92336e2bc60039d80b39a56c8e1e2bb1479cacd21d494b54943").unwrap();

    let cell = TokenValue::write_bytes(&cert, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let lv_kid: Vec<u8> = hex::decode("14927b8fb67bbad77445e5fea4c71aa9846d7ddd01").unwrap();

    let cell = TokenValue::write_bytes(&lv_kid, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let current_timestamp = Utc::now().timestamp() as u32;
    let mut timestamp: Vec<u8> = Vec::new();
    append_uint32(&mut timestamp, current_timestamp);

    // let timestamp: Vec<u8> = vec![0, 0, 3, 232];
    let cell = TokenValue::write_bytes(&timestamp, &ABI_VERSION_2_4).unwrap().into_cell().unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));

    // Push args, func name, instance name, then wasm.
    let wasm_func = "tlscheck";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
    let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
    engine.cc.stack.push(StackItem::cell(cell.clone()));
    let wasm_dict = Vec::<u8>::new();

    let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
        .unwrap()
        .into_cell()
        .unwrap();

    engine.cc.stack.push(StackItem::cell(cell.clone()));

    let start = std::time::Instant::now();
    let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
    let t = start.elapsed().as_micros();
    println!("Wasm Return Status: {:?}", status);
    println!("Time: {:?}", t);

    let res = engine.cc.stack.get(0).as_cell().unwrap(); //engine.cc.stack.get(0).as_slice().unwrap().clone();
    let slice = SliceData::load_cell(res.clone()).unwrap();
    let ress = unpack_data_from_cell(slice, &mut engine).unwrap();

    assert_eq!("000321", hex::encode(ress.clone()));

    println!("ress: {:?}", hex::encode(ress));
}

// #[test]
// fn test_tls_wasm_from_hash_for_google_spoiled_tls_data() {
// let elector_code = load_boc("benches/elector-code.boc");
// let elector_data = load_boc("benches/elector-data.boc");
// let config_data = load_boc("benches/config-data.boc");
//
// let mut ctrls = SaveList::default();
// ctrls.put(4, &mut StackItem::Cell(elector_data)).unwrap();
// let params = vec![
// StackItem::int(0x76ef1ea),
// StackItem::int(0),
// StackItem::int(0),
// StackItem::int(1633458077),
// StackItem::int(0),
// StackItem::int(0),
// StackItem::int(0),
// StackItem::tuple(vec![StackItem::int(1000000000), StackItem::None]),
// StackItem::slice(
// SliceData::from_string(
// "9fe0000000000000000000000000000000000000000000000000000000000000001_",
// )
// .unwrap(),
// ),
// StackItem::cell(config_data.reference(0).unwrap()),
// StackItem::None,
// StackItem::int(0),
// ];
// ctrls.put(7, &mut StackItem::tuple(vec![StackItem::tuple(params)])).unwrap();
//
// let stack = Stack::new();
//
// let mut engine =
// Engine::with_capabilities(DEFAULT_CAPABILITIES).setup_with_libraries(
// SliceData::load_cell_ref(&elector_code).unwrap(),
// Some(ctrls.clone()),
// Some(stack.clone()),
// None,
// vec![],
// );
// engine.wasm_engine_init_cached().unwrap();
//
// let hash_str =
// //"f45dae3df26f2a45f006bd7e7d32f426e240dfd1391669953688cb40886aff11";
// "25dc3d80d7e4d8f27dfadc9c2faf9cf2d8dea0a9e08a692da2db7e34d74d66e1";
// "f6b0cc30d023d266819b16dafa5a6a6ad25b97246bbbca80abac2df974939b87";
// "d4a067079c3ff4e0b0b6f579ef2d1b9a1d8fc21a0076162503ff46a6e8fca2e5";
// let _ = engine.add_wasm_hash_to_whitelist_by_str(hash_str.to_owned());
// let mut engine = engine.precompile_all_wasm_by_hash().unwrap();
// let hash: Vec<u8> = (0..hash_str.len())
// .step_by(2)
// .map(|i| u8::from_str_radix(&hash_str[i..i + 2], 16).unwrap())
// .collect::<Vec<u8>>();
// let cell =
// TokenValue::write_bytes(hash.as_slice(),
// &ABI_VERSION_2_4).unwrap().into_cell().unwrap(); engine.cc.stack.
// push(StackItem::cell(cell.clone()));
//
// let tls_data: Vec<u8> =
// hex::decode("
// "
// ).unwrap();
//
// let cell = TokenValue::write_bytes(&tls_data,
// &ABI_VERSION_2_4).unwrap().into_cell().unwrap(); engine.cc.stack.
// push(StackItem::cell(cell.clone()));
//
// let cert: Vec<u8> =
// hex::decode("
// 020d308202093082018ea003020102020d0203e5c068ef631a9c72905052300a06082a8648ce3d0403033047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f74205234301e170d3136303632323030303030305a170d3336303632323030303030305a3047310b300906035504061302555331223020060355040a1319476f6f676c65205472757374205365727669636573204c4c43311430120603550403130b47545320526f6f742052343076301006072a8648ce3d020106052b8104002203620004f37473a7688b60ae43b835c581307b4b499dfbc161cee6de46bd6bd5611835ae40dd73f78991305aeb3cee857ca240763ba9c6b847d82ae792916a73e9b172399f299fa298d35f5e5886650fa1846506d1dc8bc9c773c88c6a2fe5c4abd11d8aa3423040300e0603551d0f0101ff040403020186300f0603551d130101ff040530030101ff301d0603551d0e04160414804cd6eb74ff4936a3d5d8fcb53ec56af0941d8c300a06082a8648ce3d0403030369003066023100e840ff83de03f49fae1d7aa72eb9af4ff6831d0e2d85011dd1d96aec0fc2afc75e565e5cd51c5822280bf730b62fb17c023100f0613ca7f4a082e321d5841d73869c2dafca349bf19fb92336e2bc60039d80b39a56c8e1e2bb1479cacd21d494b54943"
// ).unwrap();
//
// let cell = TokenValue::write_bytes(&cert,
// &ABI_VERSION_2_4).unwrap().into_cell().unwrap(); engine.cc.stack.
// push(StackItem::cell(cell.clone()));
//
// let lv_kid: Vec<u8> =
// hex::decode("14927b8fb67bbad77445e5fea4c71aa9846d7ddd01").unwrap();
//
// let cell = TokenValue::write_bytes(&lv_kid,
// &ABI_VERSION_2_4).unwrap().into_cell().unwrap(); engine.cc.stack.
// push(StackItem::cell(cell.clone()));
//
// let current_timestamp = Utc::now().timestamp() as u32;
// let mut timestamp: Vec<u8> = Vec::new();
// append_uint32(&mut timestamp, current_timestamp);
//
// let timestamp: Vec<u8> = vec![0, 0, 3, 232];
// let cell = TokenValue::write_bytes(&timestamp,
// &ABI_VERSION_2_4).unwrap().into_cell().unwrap(); engine.cc.stack.
// push(StackItem::cell(cell.clone()));
//
// Push args, func name, instance name, then wasm.
// let wasm_func = "tlscheck";
// let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
// engine.cc.stack.push(StackItem::cell(cell.clone()));
// let wasm_func = "docs:tlschecker/tls-check-interface@0.1.0";
// let cell = pack_data_to_cell(&wasm_func.as_bytes(), &mut engine).unwrap();
// engine.cc.stack.push(StackItem::cell(cell.clone()));
// let wasm_dict = Vec::<u8>::new();
//
// let cell = TokenValue::write_bytes(&wasm_dict.as_slice(), &ABI_VERSION_2_4)
// .unwrap()
// .into_cell()
// .unwrap();
//
// engine.cc.stack.push(StackItem::cell(cell.clone()));
//
// let start = std::time::Instant::now();
// let status = execute_run_wasm_concat_multiarg(&mut engine).unwrap();
// let t = start.elapsed().as_micros();
// println!("Wasm Return Status: {:?}", status);
// println!("Time: {:?}", t);
//
// let res = engine.cc.stack.get(0).as_cell().unwrap();
// //engine.cc.stack.get(0).as_slice().unwrap().clone(); let slice =
// SliceData::load_cell(res.clone()).unwrap(); let ress =
// unpack_data_from_cell(slice, &mut engine).unwrap();
//
// assert_eq!("0100000000689fabf7ab8e1f759972f2594613044e4a197c71d4f3f541d7e2afaba98838c6d2e031e330e2fb0805dd8ea233cc05ae3d1d52ea11d0db3ae013e30b1f71808448606f90fb06a56215f57ad962829f36187e345c60153a92f9169f9de61ee7feb5dc6eaadd908e93790c729ab17a3ee9276f51cb0081e5a7d03dd76717ca596bdfc183fe5309d70b1b9cbce2757448b8577d9d1a00c30f56de34e5524255c8a51b0bcfa5d7661dfab69b7ed0e200629687635e769f43a8b2b0251d23da93753dde5b8873898500c85ea72ad05c9b3c1d014106ff21b12495051c87ed593fdc963578a73023b3390e88c39a3941ae443be09fff2a4d1a36c64c2e439ca82bb1dea584f325", hex::encode(ress.clone()));
//
// println!("ress: {:?}", hex::encode(ress));
// }
