[package]
name = "tvm_client"
#
version.workspace = true
rust-version.workspace = true
#
authors.workspace = true
edition.workspace = true
license.workspace = true

[lib]
crate-type = ["cdylib", "rlib", "staticlib"]

[build-dependencies]
serde.workspace = true
serde_derive.workspace = true
serde_json.workspace = true

[dependencies]
api_derive = { path = "../api/derive" }
api_info = { path = "../api/info" }
tvm_client_processing.workspace = true
tvm_sdk.workspace = true

tvm_abi.workspace = true
tvm_block.workspace = true
tvm_block_json.workspace = true
tvm_executor = { workspace = true, features = ["signature_with_id"] }
tvm_struct.workspace = true
tvm_types.workspace = true
tvm_vm = { workspace = true, features = [
  "signature_with_id",
  "signature_no_check",
] }

lockfree.workspace = true
sodalite = { features = ["rand"], git = "https://github.com/tvmlabs/sodalite" }


aes = "0.7.4"
anyhow.workspace = true
async-trait.workspace = true
base58 = "0.2.0"
base64.workspace = true
bincode = "1.3.3"
block-modes = "0.8.1"
byteorder.workspace = true
chacha20 = "0.6.0"
chrono.workspace = true
crc.workspace = true
ed25519-dalek.workspace = true
failure.workspace = true
futures.workspace = true
hex.workspace = true
hmac = "0.12.1"
lazy_static.workspace = true
libsecp256k1 = "0.7.1"
log.workspace = true
lru = "0.12.3"
num-bigint.workspace = true
num-derive.workspace = true
num-traits.workspace = true
pbkdf2 = { default-features = false, version = "0.12.2" }
rand.workspace = true
regex.workspace = true
scrypt = { default-features = false, version = "0.11.0" }
serde = { workspace = true, features = ["derive"] }
serde_derive.workspace = true
serde_json.workspace = true
serde_repr.workspace = true
sha2 = "0.10.0"
thiserror.workspace = true
tiny-bip39 = "2.0.0"
tokio = { features = ["sync"], workspace = true }
tokio-stream = "0.1.14"
zeroize = { features = ["zeroize_derive"], version = "1.7.0" }

# optional
zstd = { workspace = true, optional = true }

# optional for std
reqwest = { features = ["cookies"], optional = true, workspace = true }
tokio-tungstenite = { optional = true, workspace = true }

# optional for wasm
indexed_db_futures = { default-features = false, optional = true, version = "0.4.1" }
js-sys = { optional = true, version = "0.3.67" }
wasm-bindgen = { optional = true, version = "0.2.90" }
wasm-bindgen-futures = { optional = true, version = "0.4.40" }
serde_with = "3.12.0"

[dependencies.home]
optional = true
version = "0.5.9"

[dependencies.web-sys]
features = [
  "ErrorEvent",
  "FileReader",
  "Headers",
  "MessageEvent",
  "ProgressEvent",
  "Request",
  "RequestInit",
  "Response",
  "Window",
  "WebSocket",
]
optional = true
version = "0.3.67"

[dev-dependencies]
async-std = { features = ["attributes"], version = "1.13" }
dirs = "5.0.1"
graphql-parser = "0.4.0"
log4rs = "1.2.0"
mockall = "0.13.1"
pretty_assertions = "1.4.0"


[features]
default = ["std", "rustls-tls-webpki-roots"]
include-zstd = ["tvm_block/gosh", "tvm_vm/gosh"]
std = [
  "tokio/rt-multi-thread",
  "tokio/macros",
  "tokio/time",
  "tokio/net",
  "tokio/fs",
  "home",
  "include-zstd",
  "zstd",
]
native-tls = ["reqwest/default", "tokio-tungstenite/native-tls"]
native-tls-vendored = [
  "reqwest/native-tls-vendored",
  "tokio-tungstenite/native-tls-vendored",
]
rustls-tls-native-roots = [
  "reqwest/rustls-tls-native-roots",
  "tokio-tungstenite/rustls-tls-native-roots",
]
rustls-tls-webpki-roots = [
  "reqwest/rustls-tls-webpki-roots",
  "tokio-tungstenite/rustls-tls-webpki-roots",
]
wasm = ["wasm-base", "include-zstd", "zstd", "zstd/thin", "zstd/wasm"]
wasm-base = [
  "chrono/wasmbind",
  "indexed_db_futures",
  "js-sys",
  "wasm-bindgen",
  "wasm-bindgen-futures",
  "web-sys",
]

